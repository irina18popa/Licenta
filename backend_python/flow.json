[
    {
        "id": "1",
        "type": "mqtt in",
        "z": "simulated-led",
        "name": "LED Control Input",
        "topic": "smart/led/control",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 150,
        "y": 100,
        "wires": [["2"]]
    },
    {
        "id": "2",
        "type": "function",
        "z": "simulated-led",
        "name": "Process Command",
        "func": "let state = flow.get('ledState') || 'OFF';\n\nif (msg.payload === 'ON') {\n    state = 'ON';\n} else if (msg.payload === 'OFF') {\n    state = 'OFF';\n} else if (msg.payload === 'TOGGLE') {\n    state = state === 'ON' ? 'OFF' : 'ON';\n}\n\nflow.set('ledState', state);\nmsg.payload = state;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [["3", "4"]]
    },
    {
        "id": "3",
        "type": "mqtt out",
        "z": "simulated-led",
        "name": "LED Status Output",
        "topic": "smart/led/status",
        "qos": "",
        "retain": "",
        "broker": "mqtt-broker",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "4",
        "type": "debug",
        "z": "simulated-led",
        "name": "LED Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 150,
        "wires": []
    },
    {
        "id": "mqtt-broker",
        "type": "mqtt-broker",
        "z": "",
        "name": "Local MQTT Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]
